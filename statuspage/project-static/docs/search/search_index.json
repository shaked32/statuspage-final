{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Check out the installation guide to get your deployment up and running</li> <li>Or the Docker image (coming soon...)</li> </ul>"},{"location":"configuration/captcha/","title":"Captcha Verification","text":"<p>You can enable the Captcha verification for Subscriber forms in the Admin Panel.</p>"},{"location":"configuration/captcha/#available-captchas","title":"Available Captchas","text":"<ul> <li>CloudFlare Turnstile</li> <li>Google reCAPTCHA</li> <li>hCaptcha</li> </ul> <p>You only need to select the provider you want to use and enter your Site-Key and Secret-Key.</p> <p></p>"},{"location":"important-notes/admin-panel/","title":"Admin Panel 2FA","text":"<p>Due to limitations of the library we use for the 2FA, it is only possible to log in to the admin panel with a 2FA code when logging in directly.</p> <p>A login without a 2FA code must therefore be done beforehand via the dashboard URL, after which you can access the admin panel.</p>"},{"location":"installation/","title":"Installation","text":"<p>Check out the following sections for installing Status-Page:</p> <ol> <li>PostgreSQL database</li> <li>Redis</li> <li>Status-Page</li> <li>Gunicorn</li> <li>HTTP server</li> </ol>"},{"location":"installation/#requirements","title":"Requirements","text":"Dependency Minimum Version Optional Python 3.10 no PostgreSQL 10 no Redis 4.0 no SMTP Mail Server --- yes"},{"location":"installation/#upgrading","title":"Upgrading","text":"<p>If you are upgrading an existing Installation, please head over to the upgrading guide</p>"},{"location":"installation/1-postgresql/","title":"PostgreSQL Installation","text":"<p>If you already have a PostgreSQL database set up, skip to the next section.</p> <p>PostgreSQL 10 or later required</p> <p>Status-Page requires PostgreSQL 10 or later. Please note that other relational databases are not supported.</p>"},{"location":"installation/1-postgresql/#installation","title":"Installation","text":"UbuntuCentOS <pre><code>sudo apt update\nsudo apt install -y postgresql\n</code></pre> <pre><code>sudo yum install -y postgresql-server\nsudo postgresql-setup --initdb\n</code></pre> <p>CentOS configures ident host-based authentication for PostgreSQL by default. Because Status-Page will need to authenticate using a username and password, modify <code>/var/lib/pgsql/data/pg_hba.conf</code> to support MD5 authentication by changing <code>ident</code> to <code>md5</code> for the lines below:</p> <pre><code>host    all             all             127.0.0.1/32            md5\nhost    all             all             ::1/128                 md5\n</code></pre> <p>Once PostgreSQL has been installed, start the service and enable it to run at boot:</p> <pre><code>sudo systemctl start postgresql\nsudo systemctl enable postgresql\n</code></pre> <p>Before continuing, verify that you have installed PostgreSQL 10 or later:</p> <pre><code>psql -V\n</code></pre>"},{"location":"installation/1-postgresql/#database-creation","title":"Database Creation","text":"<p>At a minimum, we need to create a database for Status-Page and assign it a username and password for authentication. Start by invoking the PostgreSQL shell as the system Postgres user.</p> <pre><code>sudo -u postgres psql\n</code></pre> <p>Within the shell, enter the following commands to create the database and user (role), substituting your own value for the password:</p> <pre><code>CREATE DATABASE statuspage;\nCREATE USER statuspage WITH PASSWORD 'abcdefgh123456';\nGRANT ALL PRIVILEGES ON DATABASE statuspage TO statuspage;\n</code></pre> <p>Use a strong password</p> <p>Do not use the password from the example. Choose a strong, random password to ensure secure database authentication for your Status-Page installation.</p> <p>Once complete, enter <code>\\q</code> to exit the PostgreSQL shell.</p>"},{"location":"installation/2-redis/","title":"Redis Installation","text":""},{"location":"installation/2-redis/#install-redis","title":"Install Redis","text":"<p>Redis is an in-memory key-value store which Status-Page employs for queuing. This section entails the installation and configuration of a local Redis instance. If you already have a Redis service in place, skip to the next section.</p> <p>Redis v4.0 or later required</p> <p>Status-Page requires Redis v4.0 or higher. If your distribution does not offer a recent enough release, you will need to build Redis from source. Please see the Redis installation documentation for further details.</p> UbuntuCentOS <pre><code>sudo apt install -y redis-server\n</code></pre> <pre><code>sudo yum install -y redis\nsudo systemctl start redis\nsudo systemctl enable redis\n</code></pre> <p>Before continuing, verify that your installed version of Redis is at least v4.0:</p> <pre><code>redis-server -v\n</code></pre> <p>You may wish to modify the Redis configuration at <code>/etc/redis.conf</code> or <code>/etc/redis/redis.conf</code>, however in most cases the default configuration is sufficient.</p>"},{"location":"installation/3-status-page/","title":"Status-Page Installation","text":""},{"location":"installation/3-status-page/#install-system-packages","title":"Install System Packages","text":"<p>Begin by installing all system packages required by Status-Page and its dependencies.</p> <p>Python 3.10 or later required</p> <p>Status-Page requires Python 3.10 or later.</p> UbuntuCentOS <pre><code>sudo apt install -y python3 python3-pip python3-venv python3-dev build-essential libxml2-dev libxslt1-dev libffi-dev libpq-dev libssl-dev zlib1g-dev\n</code></pre> <pre><code>sudo yum install -y gcc libxml2-devel libxslt-devel libffi-devel libpq-devel openssl-devel redhat-rpm-config\n</code></pre> <p>Before continuing, check that your installed Python version is at least 3.10:</p> <pre><code>python3 -V\n</code></pre>"},{"location":"installation/3-status-page/#download-status-page","title":"Download Status-Page","text":"<p>Create the base directory for the installation. We'll use <code>/opt/status-page</code> for now.</p> <pre><code>sudo mkdir -p /opt/status-page/\ncd /opt/status-page/\n</code></pre> <p>If <code>git</code> is not already installed, install it:</p> UbuntuCentOS <pre><code>sudo apt install -y git\n</code></pre> <pre><code>sudo yum install -y git\n</code></pre> <p>Next, clone the Status-Page GitHub repository into the current directory. (Note that this will always pull the main branch, which may be unstable)</p> <pre><code>sudo git clone https://github.com/status-page/status-page.git .\n</code></pre> <p>The <code>git clone</code> command should generate output similar to the following:</p> <pre><code>Cloning into '.'...\nremote: Enumerating objects: 426, done.\nremote: Counting objects: 100% (426/426), done.\nremote: Compressing objects: 100% (361/361), done.\nremote: Total 426 (delta 49), reused 366 (delta 43), pack-reused 0\nReceiving objects: 100% (426/426), 2.68 MiB | 9.44 MiB/s, done.\nResolving deltas: 100% (49/49), done.\n</code></pre> <p>You now need to select a version, which you want to run. Type the following command, to check out the latest release.</p> <pre><code>sudo git checkout $(git describe --tags `git rev-list --tags --max-count=1`)\n</code></pre> <p>Note</p> <p>To check out a specific release, use the <code>git checkout</code> command with the desired release tag. For example, <code>git checkout v2.0.0</code>.</p>"},{"location":"installation/3-status-page/#create-the-status-page-system-user","title":"Create the Status-Page System User","text":"<p>Create a system user account named <code>status-page</code>. We'll configure the WSGI and HTTP services to run under this account.</p> UbuntuCentOS <pre><code>sudo adduser --system --group status-page\n</code></pre> <pre><code>sudo groupadd --system status-page\nsudo adduser --system -g status-page status-page\n</code></pre>"},{"location":"installation/3-status-page/#configuration","title":"Configuration","text":"<p>Move into the Status-Page configuration directory and make a copy of <code>configuration_example.py</code> named <code>configuration.py</code>. This file will hold all of your local configuration parameters.</p> <pre><code>cd /opt/status-page/statuspage/statuspage/\nsudo cp configuration_example.py configuration.py\n</code></pre> <p>Open <code>configuration.py</code> with your preferred editor to begin configuring Status-Page. Status-Page offers many configuration parameters, but only the following four are required for new installations:</p> <ul> <li><code>ALLOWED_HOSTS</code></li> <li><code>DATABASE</code></li> <li><code>REDIS</code></li> <li><code>SECRET_KEY</code></li> </ul>"},{"location":"installation/3-status-page/#allowed_hosts","title":"ALLOWED_HOSTS","text":"<p>This is a list of the valid hostnames and IP addresses by which this server can be reached. You must specify at least one name or IP address. (Note that this does not restrict the locations from which Status-Page may be accessed: It is merely for HTTP host header validation.)</p> <pre><code>ALLOWED_HOSTS = ['status-page.example.com', '192.0.2.123']\n</code></pre> <p>If you are not yet sure what the domain name and/or IP address of the Status-Page installation will be, you can set this to a wildcard (asterisk) to allow all host values:</p> <pre><code>ALLOWED_HOSTS = ['*']\n</code></pre>"},{"location":"installation/3-status-page/#database","title":"DATABASE","text":"<p>This parameter holds the database configuration details. You must define the username and password used when you configured PostgreSQL. If the service is running on a remote host, update the <code>HOST</code> and <code>PORT</code> parameters accordingly. See the configuration documentation for more detail on individual parameters.</p> <pre><code>DATABASE = {\n    'NAME': 'status-page',          # Database name\n    'USER': 'status-page',          # PostgreSQL username\n    'PASSWORD': 'abcdefgh123456',   # PostgreSQL password\n    'HOST': 'localhost',            # Database server\n    'PORT': '',                     # Database port (leave blank for default)\n    'CONN_MAX_AGE': 300,            # Max database connection age (seconds)\n}\n</code></pre>"},{"location":"installation/3-status-page/#redis","title":"REDIS","text":"<p>Redis is a in-memory key-value store used by Status-Page for caching and background task queuing. Redis typically requires minimal configuration; the values below should suffice for most installations. See the configuration documentation for more detail on individual parameters.</p> <p>Note that Status-Page requires the specification of two separate Redis databases: <code>tasks</code> and <code>caching</code>. These may both be provided by the same Redis service, however each should have a unique numeric database ID.</p> <pre><code>REDIS = {\n    'tasks': {\n        'HOST': 'localhost',      # Redis server\n        'PORT': 6379,             # Redis port\n        'PASSWORD': '',           # Redis password (optional)\n        'DATABASE': 0,            # Database ID\n        'SSL': False,             # Use SSL (optional)\n    },\n    'caching': {\n        'HOST': 'localhost',\n        'PORT': 6379,\n        'PASSWORD': '',\n        'DATABASE': 1,            # Unique ID for second database\n        'SSL': False,\n    }\n}\n</code></pre>"},{"location":"installation/3-status-page/#secret_key","title":"SECRET_KEY","text":"<p>This parameter must be assigned a randomly-generated key employed as a salt for hashing and related cryptographic functions. (Note, however, that it is never directly used in the encryption of secret data.) This key must be unique to this installation and is recommended to be at least 50 characters long. It should not be shared outside the local system.</p> <p>A simple Python script named <code>generate_secret_key.py</code> is provided in the parent directory to assist in generating a suitable key:</p> <pre><code>python3 ../generate_secret_key.py\n</code></pre> <p>SECRET_KEY values must match</p> <p>In the case of a highly available installation with multiple web servers, <code>SECRET_KEY</code> must be identical among all servers in order to maintain a persistent user session state.</p> <p>When you have finished modifying the configuration, remember to save the file.</p>"},{"location":"installation/3-status-page/#optional-requirements","title":"Optional Requirements","text":"<p>All Python packages required by Status-Page are listed in <code>requirements.txt</code> and will be installed automatically. Status-Page also supports some optional packages. If desired, these packages must be listed in <code>local_requirements.txt</code> within the Status-Page root directory.</p>"},{"location":"installation/3-status-page/#run-the-installation-and-upgrade-script","title":"Run the Installation and Upgrade Script","text":"<p>Once Status-Page has been configured, we're ready to proceed with the actual installation. We'll run the packaged upgrade script (<code>upgrade.sh</code>) to perform the following actions:</p> <ul> <li>Create a Python virtual environment</li> <li>Installs all required Python packages</li> <li>Run database schema migrations</li> <li>Builds the documentation locally (for offline use)</li> <li>Aggregate static resource files on disk</li> </ul> <pre><code>sudo /opt/status-page/upgrade.sh\n</code></pre> <p>Note that Python 3.10 or later is required for Status-Page v2.0 and later releases. If the default Python installation on your server is set to a lesser version, pass the path to the supported installation as an environment variable named <code>PYTHON</code>. (Note that the environment variable must be passed after the <code>sudo</code> command.)</p> <pre><code>sudo PYTHON=/usr/bin/python3.10 /opt/status-page/upgrade.sh\n</code></pre> <p>Note</p> <p>Upon completion, the upgrade script may warn that no existing virtual environment was detected. As this is a new installation, this warning can be safely ignored.</p>"},{"location":"installation/3-status-page/#create-a-super-user","title":"Create a Super User","text":"<p>Status-Page does not come with any predefined user accounts. You'll need to create a super user (administrative account) to be able to log into Status-Page. First, enter the Python virtual environment created by the upgrade script:</p> <pre><code>source /opt/status-page/venv/bin/activate\n</code></pre> <p>Once the virtual environment has been activated, you should notice the string <code>(venv)</code> prepended to your console prompt.</p> <p>Next, we'll create a superuser account using the <code>createsuperuser</code> Django management command (via <code>manage.py</code>). Specifying an email address for the user is not required, but be sure to use a very strong password.</p> <pre><code>cd /opt/status-page/statuspage\npython3 manage.py createsuperuser\n</code></pre>"},{"location":"installation/3-status-page/#test-the-application","title":"Test the Application","text":"<p>At this point, we should be able to run Status-Page's development server for testing. We can check by starting a development instance:</p> <pre><code>python3 manage.py runserver 0.0.0.0:8000 --insecure\n</code></pre> <p>If successful, you should see output similar to the following:</p> <pre><code>Watching for file changes with StatReloader\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nAugust 30, 2021 - 18:02:23\nDjango version 3.2.6, using settings 'statuspage.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n</code></pre> <p>Next, connect to the name or IP of the server (as defined in <code>ALLOWED_HOSTS</code>) on port 8000; for example, http://127.0.0.1:8000/dashboard/. You should be greeted with the Status-Page login page. Try logging in using the username and password specified when creating a superuser.</p> <p>Note</p> <p>By default RHEL based distros will likely block your testing attempts with firewalld. The development server port can be opened with <code>firewall-cmd</code> (add <code>--permanent</code> if you want the rule to survive server restarts):</p> <pre><code>firewall-cmd --zone=public --add-port=8000/tcp\n</code></pre> <p>Not for production use</p> <p>The development server is for development and testing purposes only. It is neither performant nor secure enough for production use. Do not use it in production.</p> <p>Warning</p> <p>If the test service does not run, or you cannot reach the Status-Page home page, something has gone wrong. Do not proceed with the rest of this guide until the installation has been corrected.</p> <p>Type <code>Ctrl+c</code> to stop the development server.</p>"},{"location":"installation/4-gunicorn/","title":"Gunicorn","text":"<p>Like most Django applications, Status-Page runs as a WSGI application behind an HTTP server. This documentation shows how to install and configure gunicorn (which is automatically installed with Status-Page) for this role, however other WSGI servers are available and should work similarly well.</p>"},{"location":"installation/4-gunicorn/#configuration","title":"Configuration","text":"<p>Status-Page ships with a default configuration file for gunicorn. To use it, copy <code>/opt/status-page/contrib/gunicorn.py</code> to <code>/opt/status-page/gunicorn.py</code>. (We make a copy of this file rather than pointing to it directly to ensure that any local changes to it do not get overwritten by a future upgrade.)</p> <pre><code>sudo cp /opt/status-page/contrib/gunicorn.py /opt/status-page/gunicorn.py\n</code></pre> <p>While the provided configuration should suffice for most initial installations, you may wish to edit this file to change the bound IP address and/or port number, or to make performance-related adjustments. See the Gunicorn documentation for the available configuration parameters.</p>"},{"location":"installation/4-gunicorn/#systemd-setup","title":"systemd Setup","text":"<p>We'll use systemd to control gunicorn, Status-Page's background worker scheduler and Status-Page's background worker process. First, copy <code>contrib/status-page.service</code>, <code>contrib/status-page-scheduler.service</code> and <code>contrib/status-page-rq.service</code> to the <code>/etc/systemd/system/</code> directory and reload the systemd daemon:</p> <pre><code>sudo cp -v /opt/status-page/contrib/*.service /etc/systemd/system/\nsudo systemctl daemon-reload\n</code></pre> <p>Then, start the <code>status-page</code>, <code>status-page-scheduler</code> and <code>status-page-rq</code> services and enable them to initiate at boot time:</p> <pre><code>sudo systemctl start status-page status-page-scheduler status-page-rq\nsudo systemctl enable status-page status-page-scheduler status-page-rq\n</code></pre> <p>You can use the command <code>systemctl status status-page</code> to verify that the WSGI service is running:</p> <pre><code>systemctl status status-page.service\n</code></pre> <p>You should see output similar to the following:</p> <pre><code>\u25cf status-page.service - Status-Page WSGI Service\n     Loaded: loaded (/etc/systemd/system/status-page.service; enabled; vendor preset: enabled)\n     Active: active (running) since Mon 2022-10-30 17:54:22 UTC; 14h ago\n       Docs: https://docs.status-page.dev/\n   Main PID: 1573 (gunicorn)\n      Tasks: 19 (limit: 4683)\n     Memory: 666.2M\n     CGroup: /system.slice/status-page.service\n             \u251c\u25001573 /opt/status-page/venv/bin/python3 /opt/status-page/venv/bin/gunicorn &gt;\n             \u251c\u25001579 /opt/status-page/venv/bin/python3 /opt/status-page/venv/bin/gunicorn &gt;\n             \u251c\u25001584 /opt/status-page/venv/bin/python3 /opt/status-page/venv/bin/gunicorn &gt;\n...\n</code></pre> <p>Note</p> <p>If the Status-Page service fails to start, issue the command <code>journalctl -eu status-page</code> to check for log messages that may indicate the problem.</p> <p>Once you've verified that the WSGI workers are up and running, move on to HTTP server setup.</p>"},{"location":"installation/5-http-server/","title":"HTTP Server Setup","text":"<p>This documentation provides example configurations for both nginx and Apache, though any HTTP server which supports WSGI should be compatible.</p> <p>Info</p> <p>For the sake of brevity, only Ubuntu 20.04 instructions are provided here. These tasks are not unique to Status-Page and should carry over to other distributions with minimal changes. Please consult your distribution's documentation for assistance if needed.</p>"},{"location":"installation/5-http-server/#obtain-an-ssl-certificate","title":"Obtain an SSL Certificate","text":"<p>To enable HTTPS access to Status-Page, you'll need a valid SSL certificate. You can purchase one from a trusted commercial provider or obtain one for free from Let's Encrypt. Both the public certificate and private key files need to be installed on your Status-Page server in a location that is readable by the <code>status-page</code> user.</p> <p>The command below can be used to generate a self-signed certificate for testing purposes, however it is strongly recommended to use a certificate from a trusted authority in production. Two files will be created: the public certificate (<code>status-page.crt</code>) and the private key (<code>status-page.key</code>). The certificate is published to the world, whereas the private key must be kept secret at all times.</p> <pre><code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n-keyout /etc/ssl/private/status-page.key \\\n-out /etc/ssl/certs/status-page.crt\n</code></pre> <p>The above command will prompt you for additional details of the certificate; all of these are optional.</p>"},{"location":"installation/5-http-server/#http-server-installation","title":"HTTP Server Installation","text":""},{"location":"installation/5-http-server/#option-a-nginx","title":"Option A: nginx","text":"<p>Begin by installing nginx:</p> <pre><code>sudo apt install -y nginx\n</code></pre> <p>Once nginx is installed, copy the nginx configuration file provided by Status-Page to <code>/etc/nginx/sites-available/status-page.conf</code>. Be sure to replace <code>status-page.example.com</code> with the domain name or IP address of your installation. (This should match the value configured for <code>ALLOWED_HOSTS</code> in <code>configuration.py</code>.)</p> <pre><code>sudo cp /opt/status-page/contrib/nginx.conf /etc/nginx/sites-available/status-page.conf\n</code></pre> <p>Then, delete <code>/etc/nginx/sites-enabled/default</code> and create a symlink in the <code>sites-enabled</code> directory to the configuration file you just created.</p> <pre><code>sudo rm /etc/nginx/sites-enabled/default\nsudo ln -s /etc/nginx/sites-available/status-page.conf /etc/nginx/sites-enabled/status-page.conf\n</code></pre> <p>Finally, restart the <code>nginx</code> service to use the new configuration.</p> <pre><code>sudo systemctl restart nginx\n</code></pre>"},{"location":"installation/5-http-server/#option-b-apache","title":"Option B: Apache","text":"<p>Begin by installing Apache:</p> <pre><code>sudo apt install -y apache2\n</code></pre> <p>Next, copy the default configuration file to <code>/etc/apache2/sites-available/</code>. Be sure to modify the <code>ServerName</code> parameter appropriately.</p> <pre><code>sudo cp /opt/status-page/contrib/apache.conf /etc/apache2/sites-available/status-page.conf\n</code></pre> <p>Finally, ensure that the required Apache modules are enabled, enable the <code>status-page</code> site, and reload Apache:</p> <pre><code>sudo a2enmod ssl proxy proxy_http headers\nsudo a2ensite status-page\nsudo systemctl restart apache2\n</code></pre>"},{"location":"installation/5-http-server/#confirm-connectivity","title":"Confirm Connectivity","text":"<p>At this point, you should be able to connect to the HTTPS service at the server name or IP address you provided.</p> <p>Info</p> <p>Please keep in mind that the configurations provided here are bare minimums required to get Status-Page up and running. You may want to make adjustments to better suit your production environment.</p> <p>Warning</p> <p>Certain components of Status-Page (such as the display of rack elevation diagrams) rely on the use of embedded objects. Ensure that your HTTP server configuration does not override the <code>X-Frame-Options</code> response header set by Status-Page.</p>"},{"location":"installation/5-http-server/#troubleshooting","title":"Troubleshooting","text":"<p>If you are unable to connect to the HTTP server, check that:</p> <ul> <li>Nginx/Apache is running and configured to listen on the correct port.</li> <li>Access is not being blocked by a firewall somewhere along the path. (Try connecting locally from the server itself.)</li> </ul> <p>If you are able to connect but receive a 502 (bad gateway) error, check the following:</p> <ul> <li>The WSGI worker processes (gunicorn) are running (<code>systemctl status status-page</code> should show a status of \"active (running)\")</li> <li>Nginx/Apache is configured to connect to the port on which gunicorn is listening (default is 8001).</li> <li>SELinux is not preventing the reverse proxy connection. You may need to allow HTTP network connections with the command <code>setsebool -P httpd_can_network_connect 1</code></li> </ul>"},{"location":"installation/upgrading/","title":"Upgrading","text":"<p>Upgrading Status-Page is pretty simple, however users are cautioned to always review the release notes and save a backup of their current deployment prior to beginning an upgrade.</p> <p>You can generally upgrade directly to any newer release with no interim steps, with the one exception being incrementing major versions. This can be done only from the most recent minor release of the major version.</p> <p>Perform a Backup</p> <p>Always be sure to save a backup of your current Status-Page deployment prior to starting the upgrade process.</p>"},{"location":"installation/upgrading/#1-review-the-release-notes","title":"1. Review the Release Notes","text":"<p>Prior to upgrading your Status-Page instance, be sure to carefully review all release notes that have been published since your current version was released. Although the upgrade process typically does not involve additional work, certain releases may introduce breaking or backward-incompatible changes. These are called out in the release notes under the release in which the change went into effect.</p>"},{"location":"installation/upgrading/#2-update-dependencies-to-required-versions","title":"2. Update Dependencies to Required Versions","text":"<p>Status-Page v2.0 and later require the following:</p> Dependency Minimum Version Python 3.10 PostgreSQL 10 Redis 4.0"},{"location":"installation/upgrading/#3-install-the-latest-release","title":"3. Install the Latest Release","text":"<p>You can upgrade Status-Page by checking out the latest tag of the git repository.</p> <p>This guide assumes that Status-Page is installed at <code>/opt/status-page</code>. Pull down the most recent iteration of the master branch:</p> <pre><code>cd /opt/status-page\nsudo git fetch\nsudo git checkout $(git describe --tags `git rev-list --tags --max-count=1`)\n</code></pre> <p>Checking out a specific release</p> <p>To check out a specific release, use the <code>git checkout</code> command with the desired release tag. For example, <code>git checkout v2.0.0</code>.</p>"},{"location":"installation/upgrading/#4-run-the-upgrade-script","title":"4. Run the Upgrade Script","text":"<p>Once the new code is in place, verify that any optional Python packages required by your deployment are listed in <code>local_requirements.txt</code>. Then, run the upgrade script:</p> <pre><code>sudo ./upgrade.sh\n</code></pre> <p>Warning</p> <p>If the default version of Python is not at least 3.10, you'll need to pass the path to a supported Python version as an environment variable when calling the upgrade script. For example:</p> <pre><code>sudo PYTHON=/usr/bin/python3.10 ./upgrade.sh\n</code></pre> <p>This script performs the following actions:</p> <ul> <li>Destroys and rebuilds the Python virtual environment</li> <li>Installs all required Python packages (listed in <code>requirements.txt</code>)</li> <li>Installs any additional packages from <code>local_requirements.txt</code></li> <li>Applies any database migrations that were included in the release</li> <li>Builds the documentation locally (for offline use)</li> <li>Collects all static files to be served by the HTTP service</li> <li>Deletes stale content types from the database</li> <li>Deletes all expired user sessions from the database</li> </ul> <p>Note</p> <p>If the upgrade script prompts a warning about unreflected database migrations, this indicates that some change has been made to your local codebase and should be investigated. Never attempt to create new migrations unless you are intentionally modifying the database schema.</p>"},{"location":"installation/upgrading/#5-restart-the-status-page-services","title":"5. Restart the Status-Page Services","text":"<p>Finally, restart the gunicorn and RQ services:</p> <pre><code>sudo systemctl restart status-page status-page-scheduler status-page-rq\n</code></pre>"},{"location":"release-notes/","title":"Release Notes","text":"<p>Our Releases are following the semver specification:</p> <pre><code>v 1 . 0 . 0\n  ^   ^   ^\n  |   |   |\n  |   |   Patch (Bug fixes)\n  |   |\n  |   Minor (No breaking changes to the Software, e.g. adding new features)\n  |\n  Major (Breaking changes to the Software)\n</code></pre> <p>This page contains a history of all major and minor releases since v2.0.0. For more detail on a specific patch release, please see the release notes page for that specific minor release.</p>"},{"location":"release-notes/#version-24-june-2023","title":"Version 2.4 (June 2023)","text":"<ul> <li>Add Webhooks</li> </ul>"},{"location":"release-notes/#version-23-june-2023","title":"Version 2.3 (June 2023)","text":"<ul> <li>Add Tabs to Object Views</li> </ul>"},{"location":"release-notes/#version-22-march-2023","title":"Version 2.2 (March 2023)","text":"<ul> <li>Maintenance and Incident Templates</li> <li>Add Template Selector for Incident and Maintenance Creation</li> </ul>"},{"location":"release-notes/#version-21-february-2023","title":"Version 2.1 (February 2023)","text":"<ul> <li>Add bars to components that show incidents for the past 90 days</li> <li>Add Markdown Styling</li> <li>Add Captcha Verification Option for Subscriber Forms</li> </ul>"},{"location":"release-notes/#version-20-november-2022","title":"Version 2.0 (November 2022)","text":"<ul> <li>Rewrite of Status-Page in python, with django</li> <li>Add Missing Template parts from Dynamic Config</li> <li>Fix Database Settings</li> <li>Fix Settings</li> <li>Set Python requirement to 3.10</li> <li>Fix Default files and requirements</li> <li>Fix Assets</li> <li>Make Component Group collapse choices actually work</li> <li>Make Metric collapse choices actually work</li> <li>Make Component Links and Descriptions work</li> <li>Add missing Plugin Views</li> <li>Fix select Styles</li> <li>Add missing E-Mail Templates for Notifications</li> <li>Add missing Media folder</li> <li>Fix redis connection within collectstatic command</li> <li>Incident Update edit text box</li> <li>Increase Incident and Maintenance Update Text Length</li> </ul>"},{"location":"release-notes/version-2.0/","title":"Status-Page v2.0","text":""},{"location":"release-notes/version-2.0/#v2016-2022-12-19","title":"v2.0.16 (2022-12-19)","text":""},{"location":"release-notes/version-2.0/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Increase Incident and Maintenance Update Text Length</li> </ul>"},{"location":"release-notes/version-2.0/#v2015-2022-12-06","title":"v2.0.15 (2022-12-06)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_1","title":"Bug fixes","text":"<ul> <li>Incident Update edit text box</li> </ul>"},{"location":"release-notes/version-2.0/#v2014-2022-11-12","title":"v2.0.14 (2022-11-12)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_2","title":"Bug fixes","text":"<ul> <li>Fix redis connection within collectstatic command</li> </ul>"},{"location":"release-notes/version-2.0/#v2013-2022-11-12","title":"v2.0.13 (2022-11-12)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_3","title":"Bug fixes","text":"<ul> <li>Fix redis connection within collectstatic command</li> </ul>"},{"location":"release-notes/version-2.0/#v2012-2022-11-12","title":"v2.0.12 (2022-11-12)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_4","title":"Bug fixes","text":"<ul> <li>Add missing Media folder</li> </ul>"},{"location":"release-notes/version-2.0/#v2011-2022-11-04","title":"v2.0.11 (2022-11-04)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_5","title":"Bug fixes","text":"<ul> <li>Add missing E-Mail Templates for Notifications</li> </ul>"},{"location":"release-notes/version-2.0/#v2010-2022-11-04","title":"v2.0.10 (2022-11-04)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_6","title":"Bug fixes","text":"<ul> <li>Fix select Styles</li> </ul>"},{"location":"release-notes/version-2.0/#v209-2022-11-04","title":"v2.0.9 (2022-11-04)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_7","title":"Bug fixes","text":"<ul> <li>Add missing Plugin Views</li> </ul>"},{"location":"release-notes/version-2.0/#v208-2022-11-04","title":"v2.0.8 (2022-11-04)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_8","title":"Bug fixes","text":"<ul> <li>Make Component Group collapse choices actually work</li> <li>Make Metric collapse choices actually work</li> <li>Make Component Links and Descriptions work</li> </ul>"},{"location":"release-notes/version-2.0/#v207-2022-11-04","title":"v2.0.7 (2022-11-04)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_9","title":"Bug fixes","text":"<ul> <li>Fix Assets</li> </ul>"},{"location":"release-notes/version-2.0/#v206-2022-11-03","title":"v2.0.6 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_10","title":"Bug fixes","text":"<ul> <li>Fix Default files and requirements</li> </ul>"},{"location":"release-notes/version-2.0/#v205-2022-11-03","title":"v2.0.5 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_11","title":"Bug fixes","text":"<ul> <li>Set Python requirement to 3.10</li> </ul>"},{"location":"release-notes/version-2.0/#v204-2022-11-03","title":"v2.0.4 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_12","title":"Bug fixes","text":"<ul> <li>Fix Database Settings</li> </ul>"},{"location":"release-notes/version-2.0/#v203-2022-11-03","title":"v2.0.3 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_13","title":"Bug fixes","text":"<ul> <li>Fix Settings</li> </ul>"},{"location":"release-notes/version-2.0/#v202-2022-11-03","title":"v2.0.2 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#bug-fixes_14","title":"Bug fixes","text":"<ul> <li>Fix Database Settings</li> </ul>"},{"location":"release-notes/version-2.0/#v201-2022-11-03","title":"v2.0.1 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#enhancements","title":"Enhancements","text":"<ul> <li>Add Missing Template parts from Dynamic Config</li> </ul>"},{"location":"release-notes/version-2.0/#v200-2022-11-03","title":"v2.0.0 (2022-11-03)","text":""},{"location":"release-notes/version-2.0/#enhancements_1","title":"Enhancements","text":"<ul> <li>Rewrite of Status-Page in python, with django</li> </ul>"},{"location":"release-notes/version-2.1/","title":"Status-Page v2.1","text":""},{"location":"release-notes/version-2.1/#v212-2023-03-11","title":"v2.1.2 (2023-03-11)","text":""},{"location":"release-notes/version-2.1/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Add missing <code>show_historic_incidents</code> to component bulk edit form</li> <li>Fix Maintenance Update Textbox</li> <li>Add created field for incidents and maintenances</li> <li>Add Captcha Verification Option for Subscriber Forms</li> </ul>"},{"location":"release-notes/version-2.1/#v211-2023-02-17","title":"v2.1.1 (2023-02-17)","text":""},{"location":"release-notes/version-2.1/#bug-fixes_1","title":"Bug fixes","text":"<ul> <li>Add Markdown Styling</li> <li>Subscriber verification E-mail</li> <li>Custom Header / Footer HTML Char Escaping</li> </ul>"},{"location":"release-notes/version-2.1/#v210-2023-02-11","title":"v2.1.0 (2023-02-11)","text":""},{"location":"release-notes/version-2.1/#features","title":"Features","text":"<ul> <li>Add bars to components that show incidents for the past 90 days</li> </ul>"},{"location":"release-notes/version-2.2/","title":"Status-Page v2.2","text":""},{"location":"release-notes/version-2.2/#v226-2023-05-03","title":"v2.2.6 (2023-05-03)","text":""},{"location":"release-notes/version-2.2/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>improve historic status display</li> </ul>"},{"location":"release-notes/version-2.2/#v225-2023-05-02","title":"v2.2.5 (2023-05-02)","text":""},{"location":"release-notes/version-2.2/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>fix all emails</li> <li>make templates selectable in incident / maintenance edit</li> <li>add templates for incident and maintenance update</li> </ul>"},{"location":"release-notes/version-2.2/#v224-2023-03-30","title":"v2.2.4 (2023-03-30)","text":""},{"location":"release-notes/version-2.2/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Line Break fixes</li> <li>Typo fixes</li> </ul>"},{"location":"release-notes/version-2.2/#v223-2023-03-30","title":"v2.2.3 (2023-03-30)","text":""},{"location":"release-notes/version-2.2/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Make E-Mail Subject editable</li> <li>Multiple bug fixes and performance improvements</li> </ul>"},{"location":"release-notes/version-2.2/#v222-2023-03-23","title":"v2.2.2 (2023-03-23)","text":""},{"location":"release-notes/version-2.2/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>E-Mail Threading</li> <li>Creation E-Mails will be sent again</li> </ul>"},{"location":"release-notes/version-2.2/#v221-2023-03-22","title":"v2.2.1 (2023-03-22)","text":""},{"location":"release-notes/version-2.2/#features","title":"Features","text":"<ul> <li>Add Template Selector for Incident and Maintenance Creation</li> </ul>"},{"location":"release-notes/version-2.2/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Apply creation date to incident and maintenance updates on creation</li> <li>Add switch for incident and maintenane notifications</li> <li>Incident and Maintenance Template URL-Encode</li> </ul>"},{"location":"release-notes/version-2.2/#v220-2023-03-12","title":"v2.2.0 (2023-03-12)","text":""},{"location":"release-notes/version-2.2/#features_1","title":"Features","text":"<ul> <li>Maintenance and Incident Templates</li> </ul>"},{"location":"release-notes/version-2.3/","title":"Status-Page v2.3","text":""},{"location":"release-notes/version-2.3/#v230-2023-06-05","title":"v2.3.0 (2023-06-05)","text":""},{"location":"release-notes/version-2.3/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Add auto start and end to maintenance templates</li> <li>Historic Incident Date</li> </ul>"},{"location":"release-notes/version-2.3/#features","title":"Features","text":"<ul> <li>Add Tabs to Object Views</li> </ul>"},{"location":"release-notes/version-2.3/#refactoring","title":"Refactoring","text":"<ul> <li>Migrate Object Views to Registry</li> </ul>"},{"location":"release-notes/version-2.4/","title":"Status-Page v2.4","text":""},{"location":"release-notes/version-2.4/#v240-2023-06-09","title":"v2.4.0 (2023-06-09)","text":""},{"location":"release-notes/version-2.4/#features","title":"Features","text":"<ul> <li>Add Webhooks</li> </ul>"},{"location":"release-notes/version-2.4/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Fix model creation forms</li> </ul>"},{"location":"release-notes/version-2.5/","title":"Status-Page v2.5","text":""},{"location":"release-notes/version-2.5/#v251-future","title":"v2.5.1 (FUTURE)","text":""},{"location":"release-notes/version-2.5/#v250-2024-05-30","title":"v2.5.0 (2024-05-30)","text":""},{"location":"release-notes/version-2.5/#features","title":"Features","text":"<ul> <li>Add Jinja2 rendering for incident / maintenance templates</li> <li>allow selection if incident / maintenance email should be sent</li> </ul>"},{"location":"release-notes/version-2.5/#fixes","title":"Fixes","text":"<ul> <li>Fix anonymous subscribers</li> </ul>"}]}